version: '3.8'

services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: ${NODE_ENV}
      VERSION: ${VERSION}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_USERNAME: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      USER_SECRET: ${USER_SECRET}
      WEATHER_API: ${WEATHER_API}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
    ports:
      - 3000:3000
    depends_on:
      - postgresql
      - redis
  # POSTGRESQL
  postgresql:
    image: postgres:16-alpine
    restart: always
    container_name: postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
  redis:
    image: redis:7.2-alpine
    restart: always
    container_name: redis
    deploy:
      resources:
        limits:
          memory: 50M
    command: 
      /bin/sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - "6379:6379"